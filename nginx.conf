user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Brotli Config
    brotli              on;
    brotli_comp_level    6;
    brotli_types         text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript image/svg+xml application/font-woff2;

    # Gzip fallback
    gzip                on;
    gzip_comp_level     6;
    gzip_min_length     256;
    gzip_proxied        any;
    gzip_types          text/plain text/css application/json application/javascript text/xml application/xml+rss image/svg+xml;

    # Cache arquivos estáticos por muito tempo
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server {
        listen 80;
        listen [::]:80;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        # Cache agressivo para assets estáticos
        location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|webp|woff2?|ttf|eot|otf)$ {
            expires 365d;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # Cache para fontes (opcional)
        location ~* \.(?:ttf|woff|woff2|eot)$ {
            expires 365d;
            add_header Cache-Control "public, immutable";
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
}
